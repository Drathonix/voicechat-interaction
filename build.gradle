plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id "com.github.johnrengelman.shadow" version "7.1.0"
}


group = 'de.maxhenkel'
version = '2.3.1'
String mod_id = "vcinteraction"
String mcver = "1.19.2"
String forgever = "43.1.1"
String voicechat_api_version = "2.2.39"
String configbuilder_version="1.0.5"

java {
    archivesBaseName = 'vcinteraction'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

reobf {
    shadowJar {}
}

minecraft {
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    mappings channel: 'official', version: mcver
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'vcinteraction'
            mods {
                vcinteraction {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'vcinteraction'
            mods {
                vcinteraction {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'vcinteraction'
            mods {
                vcinteraction {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'vcinteraction', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                vcinteraction {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'https://maven.maxhenkel.de/repository/public' }
    maven { url 'https://maven.nucleoid.xyz' }
    repositories {
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mcver}-${forgever}"
    implementation "de.maxhenkel.voicechat:voicechat-api:${voicechat_api_version}"
    implementation 'org.jetbrains:annotations:23.0.0'

    implementation "de.maxhenkel.configbuilder:configbuilder:${configbuilder_version}"
    shadow "de.maxhenkel.configbuilder:configbuilder:${configbuilder_version}"
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier ''
    relocate 'de.maxhenkel.configbuilder', "de.maxhenkel.${mod_id}.configbuilder"
    relocate 'de.maxhenkel.opus4j', "de.maxhenkel.${mod_id}.opus4j"
    relocate 'de.maxhenkel.lame4j', "de.maxhenkel.${mod_id}.lame4j"
    relocate 'org.concentus', "de.maxhenkel.${mod_id}.concentus"
    relocate 'de.maxhenkel.rnnoise4j', "de.maxhenkel.${mod_id}.rnnoise4j"
    relocate 'com.dd.plist', "de.maxhenkel.${mod_id}.com.dd.plist"
    dependencies {
        exclude(dependency('net.java.dev.jna:jna'))
        exclude(dependency('net.java.dev.jna:jna-platform'))
        exclude(dependency('com.google.code.findbugs:jsr305'))
    }
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes([
                "Specification-Title"     : "vcinteraction",
                "Specification-Vendor"    : "Max Henkel, Drathonix",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "henkelmax, Drathonix",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    from configurations.shadow.collect { it.isDirectory() ? it : zipTree(it) }

}



jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
